//Optimized
//TC->Total nodes
//sc->O(1)

Node* merge(Node* root1,Node* root2)    
    {
        //Node* temp=root;
        Node* ptr=new Node(0);
        Node* head2=ptr;
        
        while(root1!=NULL && root2!=NULL)
        {
           if(root1->data<=root2->data)
           {
               head2->bottom=root1;
               head2=head2->bottom;
               root1=root1->bottom;
           }
           else if(root1->data>root2->data)
           {
               head2->bottom=root2;
               head2=head2->bottom;
               root2=root2->bottom;
           }   
        }
        if(root1!=NULL)
        head2->bottom=root1;
        else if(root2!=NULL)
        head2->bottom=root2;
        return ptr->bottom;
    }
   
Node *flatten(Node *root)
{
   if(root==NULL || root->next==NULL)
   return root;
   
   root->next=flatten(root->next);
   
   root=merge(root,root->next);
   
   return root;
}
