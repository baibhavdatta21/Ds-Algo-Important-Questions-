//Optimized
//Tc->O(NlogN)
//SC->O(1)

bool isPossible(int A[], int mid, int M,int N)
    {
        int alloc=1;
        int pages=0;
        for(int i=0;i<N;i++)
        {
            if(A[i]>mid)
            return false;
            else if(pages+A[i]>mid)
            {
                alloc+=1;
                pages=A[i];
            }
            else
            {
                pages=pages+A[i];
            }
        }
        if(alloc>M)
        return false;
        else
        return true;
    }
    int findPages(int A[], int N, int M) 
    {
        //code here
        int high=1e9;
        int low=0;
        int res;
        while(high>=low)
        {
            int mid=(high+low)/2;
            
            if(isPossible(A,mid,M,N))
            {
                res=mid;
                high=mid-1;
            }
            else
            {
                low=mid+1;
            }
        
        }
        return res;
    }
