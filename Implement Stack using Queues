//Brute
//Sc->O(2N)

MyStack() 
    {
        
    }
    queue<int>q1;
    queue<int>q2;
    
    void push(int x) 
    {
        q2.push(x);
        while(!q1.empty())
        {
            q2.push(q1.front());
            q1.pop();
                
        }
        swap(q1,q2);
    }
    int  pop() 
    {
        int result=q1.front();
        q1.pop();
        return result;
    }
    
    int top() 
    {
        return q1.front();
    }
    
    bool empty() 
    {
        return q1.size() == 0; 
    }

//Optimized
//Sc->O(N)

MyStack() 
    {
        
    }
    queue<int>q1;    
    
    void push(int x) 
    {
        q1.push(x);
        int n=q1.size();
        for(int i=0;i<n-1;i++)
        {
            q1.push(q1.front());
            q1.pop();
        }
    }
    int  pop() 
    {
        int result=q1.front();
        q1.pop();
        return result;
    }
    
    int top() 
    {
        return q1.front();
    }
    
    bool empty() 
    {
        return q1.size() == 0; 
    }

