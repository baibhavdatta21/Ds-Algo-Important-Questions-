//Brute force
//TC->O((N*M)(N+M))
//SC->O(1)
/*
void setZeroes(vector<vector<int>>& matrix) 
    {    
        int rows = matrix.size(), cols = matrix[0].size();
        for (int i = 0; i < rows; i++) 
        {
        for (int j = 0; j < cols; j++) 
        {
          if (matrix[i][j] == 0)
          {

            int ind = i - 1;
            while (ind >= 0) {
              if (matrix[ind][j] != 0) 
              {
                matrix[ind][j] = INT_MIN;
              }
              ind--;
            }

            ind = i + 1;
            while (ind < rows) 
            {
              if (matrix[ind][j] != 0) 
              {
                matrix[ind][j] = INT_MIN;
              }
              ind++;
            }

            ind = j - 1;
            while (ind >= 0) {
              if (matrix[i][ind] != 0) 
              {
                matrix[i][ind] = INT_MIN;
              }
              ind--;
            }

            ind = j + 1;
            while (ind < cols) 
            {
              if (matrix[i][ind] != 0) 
              {
                matrix[i][ind] = INT_MIN;

              }
              ind++;
            }
          }
        }
      }
        
      for (int i = 0; i < rows; i++) 
      {
        for (int j = 0; j < cols; j++) 
        {
          if (matrix[i][j] ==INT_MIN) 
          {
            matrix[i][j] = 0;
          }
        }
      }    
    }
    
    */
    
    //BETTER APPROCH
    //TC->O((N*M)+(N*M))
    //SC->O((N)+(M))
    /*void setZeroes(vector<vector<int>>& matrix) 
    {
        
        int row=matrix.size();
        int col=matrix[0].size();
        vector<bool>vi(row,false);
        vector<bool>vj(col,false);
        for(int i=0;i<row;i++)
        {
            for(int j=0;j<col;j++)
            {
                if(matrix[i][j]==0)
                {
                    vi[i]=true;
                    vj[j]=true;
                }
            }
        }
        for(int i=0;i<row;i++)
        {
            for(int j=0;j<col;j++)
            {
                if(vi[i]==true|| vj[j]==true)
                {
                    matrix[i][j]=0;
                }
            }
        }
        
    } 
    
    //Optimized Approach
     //TC->O((N*M)+(N*M))
    //SC->O(1)
    void setZeroes(vector<vector<int>>& matrix) 
    {
        int col0=1;
        int row=matrix.size();
        int col=matrix[0].size();
        
        for(int i=0;i<row;i++)
        {
            if(matrix[i][0]==0)
            col0=0;
            for(int j=1;j<col;j++)
            {
                if(matrix[i][j]==0)
                {
                    matrix[i][0]=matrix[0][j]=0;
                }
            }
            
        }
        for(int i=row-1;i>=0;i--)
        {
            for(int j=col-1;j>=1;j--)
            {
                if(matrix[i][0]==0 || matrix[0][j]==0)
                {
                    matrix[i][j]=0;
                }
            }
            if(col0==0)
            matrix[i][0]=0;
        }  
            
    }    */
