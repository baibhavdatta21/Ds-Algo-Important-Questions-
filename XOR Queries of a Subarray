vector<int> xorQueries(vector<int>& arr, vector<vector<int>>& queries)
    {
        vector<int> ans;
        int val=0;
        for(auto it:queries)
        {
            
            if(it[0]==it[1])
            ans.push_back(arr[it[0]]);   
            else
            {
                for(int i=it[0];i<=it[1];i++)
                {
                    val=val^arr[i];
                }
                ans.push_back(val);
                val=0;
            }
               
        }
        return ans;
    }*/
    vector<int> xorQueries(vector<int>& arr, vector<vector<int>>& queries)
    {
        vector<int> ans;
        for(int i=1;i<arr.size();i++)
        {
            arr[i]=arr[i]^arr[i-1];
        }
        
        for(auto it : queries)
        {
            int first=it[0];
            int second=it[1];
            
            if(first==0)
            {
                ans.push_back(arr[second]);
            }
            /*else if(first==second)
            {
                ans.push_back(arr[second]^arr[first-1]);
            }*/
            else if(first!=0)
            {
                ans.push_back(arr[first-1]^arr[second]);
            }
        }
        return ans;
    }
