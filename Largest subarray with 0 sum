//Brute
//TC->O(N*N)
//SC->O(N)

int maxLen(vector<int>&A, int n)
    {
        int sum=0;
        int maxi=0;
        for(int i=0;i<n-1;i++)
        {
            
            int sum=A[i];
            for(int j=i+1;j<n;j++)
            {
                sum=sum+A[j];
                if(sum==0)
                {
                    int count=j-i+1;
                    maxi=max(count,maxi);
                }
            }
        }
        return maxi;
    }
///OPtimized
//TC->O(N)
//SC->O(N)
int maxLen(vector<int>&A, int n)
    {   
        // Your code here
        int ans=0;
        int flag=1;
        int sum=0;
        unordered_map<int,int> mp;
        for(int i=0;i<n;i++)
        {
            sum=sum+A[i];
            if(sum==0)
            {
                ans=i+1;
            }
            
            else
            {
                if(mp.find(sum)!=mp.end())
                {
                    ans=max(ans,i-mp[sum]);
                }
                else
                {
                    mp[sum]=i;
                }
            }
        }
        return ans;
    }
