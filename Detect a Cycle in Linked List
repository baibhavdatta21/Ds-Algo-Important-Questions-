//Brute/Better
//TC->O(N)
//SC->O(N)
bool hasCycle(ListNode *head) 
    {
        unordered_set<ListNode*> s;
        ListNode *temp=head;
        while(temp!=NULL)
        {
            if(s.find(temp)==s.end())
            {
                s.insert(temp);
            }
            else
            {
                return true;
            }
            temp=temp->next;
        }
        return false;
    }*/
    //Optimized
    //Tc->O(N)
    //Sc->O(1)
    
    bool hasCycle(ListNode *head) 
    {
        if(head==NULL || head->next==NULL)
        return false;
        
        ListNode *slow=head;
        ListNode *fast=head;
        
        while(fast!=NULL && fast->next!=NULL)
        {
            fast=fast->next->next;
            slow=slow->next;
            if(fast==slow)
            {
                return true;
            }
            
        }
        return false;
    }
