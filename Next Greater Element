//Next greater element type 1
//TC->O(n)+O(N)+o(N)
//Sc->O(N)

vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) 
    {
        vector<int> ans;
        stack<int> st;
        int n=nums2.size();
        unordered_map<int,int> mp;
        
        for(int i=n-1;i>=0;i--)
        {
            if(st.empty())
            {
                st.push(nums2[i]);
                mp.insert({nums2[i],-1});
            }
            else
            {
                while(!st.empty() && st.top()<=nums2[i])
                {
                    st.pop();
                }
                if(st.empty())
                {
                    st.push(nums2[i]);
                    mp.insert({nums2[i],-1});
                }
                else
                {
                    mp.insert({nums2[i],st.top()});
                    st.push(nums2[i]);
                }

            }
            
        } 
        for(int i=0;i<nums1.size();i++)
        {
            for(auto it:mp)
            {
                if(it.first==nums1[i])
                {
                    ans.push_back(it.second);
                }
            }
        }
        return ans;
    }
    
    
//Next greater element type 2
//TC->O(N)+O(N)
//Sc->O(N)

vector<int> nextGreaterElements(vector<int>& nums) 
    {

        int n=nums.size();
        vector<int> ans(n);
        stack<int> st;
        for(int i=2*n-1;i>=0;i--)
        {
            while(!st.empty() && nums[i%n]>=st.top())
            {
                st.pop();
            }
            if(i<n)
            {
                if(st.empty())
                {
                    ans[i]=(-1);
                }
                else
                {
                    ans[i]=(st.top());
                }
            }
            st.push(nums[i%n]);
            
        }
        return ans;
    }
