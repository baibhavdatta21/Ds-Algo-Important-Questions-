//Brute Focrce
//Tc->O(N)+O(N/2)
//SC->O(1)
ListNode* middleNode(ListNode* head) 
     {
         
         int count=0;
         ListNode* temp=head;
         while(temp!=NULL)
         {
             count++;
             temp=temp->next;
         }
         
        count=count/2;     
        while(count>0)
        {
            head=head->next;
            count--;
        }
         
         return head;
         
     }
  //Optimized Approach
  //Tc->O(N/2)
  //SC->O(1)
    /*Totoise Methord
    ListNode* middleNode(ListNode* head) 
    {
        ListNode* fast=head;
        ListNode* slow=head;
        
        while(fast!=NULL && fast->next!=NULL)
        {
            fast=fast->next->next;
            slow=slow->next;
        }
        return slow;
    }*/
