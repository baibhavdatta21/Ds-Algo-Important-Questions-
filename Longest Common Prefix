string checkf(string s1,string s2)
    {
        int n=s1.size();
        int m=s2.size();
        string ans="";
        if(n==0 || m==0)
        return ans;
        for(int i=0;i<n;i++)
        {
            
            if(s1[i]==s2[i])
            {
                ans+=s1[i];
            }
            else 
            {
                break;
            
            }
        }
        cout<<ans<<endl;
        return ans;
    }
    string longestCommonPrefix(vector<string>& strs) 
    {
        
        string check="";
        int n=strs.size();
        if(n==1)
        return strs[0];
        check=checkf(strs[1],strs[0]);
        for(int i=2;i<n;i++)
        {
            check=checkf(check,strs[i]);
        }
        return check;
    }
    //Tc->O(NlogN)
    //SC->O(1)
    string longestCommonPrefix(vector<string>& strs) 
    {
        int n=strs.size();
        sort(strs.begin(),strs.end());
        string ans="";
        for(int i=0;i<min(strs[0].size(),strs[n-1].size());i++)
        {
            if(strs[0][i]==strs[n-1][i])
            ans+=strs[0][i];
            else
            break;
        }
        return ans;
    }
