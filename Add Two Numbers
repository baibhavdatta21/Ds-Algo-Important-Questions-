//Optimized approach(only approach)
//Tc->O(max(n1,n2)
//Sc->O(n)
ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) 
    {
        ListNode* ans=new ListNode();
        ListNode* temp=ans;
        int carry=0;
        while(l1!=NULL || l2!=NULL || carry!=0)
        {
            if(l1!=NULL && l2!=NULL)
            {
                int value=l1->val+l2->val+carry;
                ListNode* dummy=new ListNode((value)%10);
                temp->next=dummy;
                temp=temp->next;
                l1=l1->next;
                l2=l2->next;
                carry=value/10;
            }
            else if(l1!=NULL)
            {
                int value=l1->val+carry;
                ListNode* dummy=new ListNode((value)%10);
                temp->next=dummy;
                temp=temp->next;
                l1=l1->next;
                carry=value/10;
            }
             else if(l2!=NULL)
            {
                int value=l2->val+carry;
                ListNode* dummy=new ListNode((value)%10);
                temp->next=dummy;
                temp=temp->next;
                l2=l2->next;
                carry=value/10;
            }
            else if(carry!=0)
            {
                ListNode* dummy=new ListNode(carry);
                temp->next=dummy;
                temp=temp->next;
                carry=0;
            }
            
        }
        return ans->next;
    }
